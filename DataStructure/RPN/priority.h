//
// Created by 薛智钧 on 2020/3/14.
//

#ifndef DATASTRUCTURE_PRIORITY_H
#define DATASTRUCTURE_PRIORITY_H

#define N_OPTR 8 //运算符总数
typedef enum { ADD, SUB, MUL, DIV, POW, FAC, L_P, R_P } Operator; //运算符集合

const char pri[N_OPTR][N_OPTR] = { //运算符优先等级 [栈顶] [当前]
        /*       |-------------------- 当 前 运 算 符 --------------------| */
        /*              +      -      *      /      ^      !      (      )
        /* --  + */    '>',   '>',   '<',   '<',   '<',   '<',   '<',   '>',
        /* |   - */    '>',   '>',   '<',   '<',   '<',   '<',   '<',   '>',
        /* 栈  * */    '>',   '>',   '>',   '>',   '<',   '<',   '<',   '>',
        /* 顶  / */    '>',   '>',   '>',   '>',   '<',   '<',   '<',   '>',
        /* 运  ^ */    '>',   '>',   '>',   '>',   '>',   '<',   '<',   '>',
        /* 算  ! */    '>',   '>',   '>',   '>',   '>',   '>',   ' ',   '>',
        /* 符  ( */    '<',   '<',   '<',   '<',   '<',   '<',   '<',   '=',
        /* |   ) */    ' ',   ' ',   ' ',   ' ',   ' ',   ' ',   ' ',   ' '
};

#endif //DATASTRUCTURE_PRIORITY_H
